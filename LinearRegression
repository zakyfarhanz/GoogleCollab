from google.colab import drive
drive.mount('/content/drive')

import pandas as pd

train = pd.read_csv('/content/drive/My Drive/TitanicDataset/train.csv')
test = pd.read_csv('/content/drive/My Drive/TitanicDataset/test.csv')

train.head()

test.head()

train.info()

test.info()

import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
sns.set()

## **Membuat Chart dengan Dataset**

def bar_chart(feature):
  survived = train[train['Survived']==1][feature].value_counts()
  dead = train[train['Survived']==0][feature].value_counts()
  df = pd.DataFrame([survived,dead])
  df.index = ['Survived','Dead']
  df.plot(kind='bar',stacked=True, figsize=(10,5))

bar_chart('Sex')

bar_chart('Pclass')

bar_chart('SibSp')

train.head(10)

train_test_data = [train,test] #combine train and test dataset

for dataset in train_test_data:
  dataset['Title'] = dataset['Name'].str.extract(' ([A-Za-z]+)\.', expand=False)

train['Title'].value_counts()

test['Title'].value_counts()

title_mapping = {"Mr":0, "Miss":1, "Mrs":2,
                "Master":3, "Dr":3, "Rev":3, "Col":3, "Major":3,
                "Mile":3, "Countess":3, "Ms":3, "Lady":3, "Jonkheer":3, "Don":3,
                "Dona":3, "Mme":3, "Capt":3, "Sir":3}

for dataset in train_test_data:
  dataset['Title'] = dataset['Title'].map(title_mapping)

train.head()

test.head()

bar_chart('Title')

***Menghilangkan Coloumn "Nama" pada dataset**

#delete unnecessary feature from dataset
train.drop('Name', axis=1, inplace=True)
test.drop('Name', axis=1, inplace=True)

train.head()

sex_mapping = {"male":0, "female":1}

for dataset in train_test_data:
  dataset['Sex'] = dataset['Sex'].map(sex_mapping)

bar_chart('Sex')

train.head(100)

# fill missing age with median age for each title (Mr, Mrs, Miss, Others)
train["Age"].fillna(train.groupby("Title")["Age"].transform("median"), inplace=True)
test["Age"].fillna(test.groupby("Title")["Age"].transform("median"), inplace=True)

**Memunculkan Grafik "Median" Umur dari Coloumn  "Survived"**

facet = sns.FacetGrid(train, hue="Survived", aspect=5)
facet.map(sns.kdeplot, 'Age', shade=True)
facet.set(xlim=(0, train['Age'].max()))
facet.add_legend()

plt.show()

**Memuncukan grafik dari range "0-20"**

facet = sns.FacetGrid(train, hue="Survived", aspect=5)
facet.map(sns.kdeplot, 'Age', shade=True)
facet.set(xlim=(0, train['Age'].max()))
facet.add_legend()

plt.xlim(0, 20)

train.info()

for dataset in train_test_data:
  dataset.loc[ dataset['Age'] <= 16, 'Age'] = 0,
  dataset.loc[(dataset['Age'] > 16) & (dataset['Age'] <= 26), 'Age' ] =1,
  dataset.loc[(dataset['Age'] > 26) & (dataset['Age'] <= 36), 'Age'] =2,
  dataset.loc[(dataset['Age'] > 36) & (dataset['Age'] <= 62), 'Age'] =3,
  dataset.loc[ dataset['Age'] > 62, 'Age'] = 4

train.head()

bar_chart('Age')

train.head()

train.drop(['Ticket','Fare','Cabin', 'Embarked'],axis=1, inplace=True)
test.drop(['Ticket','Fare','Cabin', 'Embarked'],axis=1, inplace=True)

train.head()

test.head()

train.info()

X = train.ix[:,(1,2,3,4,5,6)].values
y = train.ix[:,0].values

X_train, X_test, Y_train, Y_test = train_test_data(X, y, test_size= .3, random_state=25)

